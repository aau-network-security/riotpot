# This Docker Compose file is meant to be used on a development 
# environment for testing.
# This environment includes a fake local network, a local database and
# a volume mounted with the code to see changes on the go.

services:

  # Tcpdump host that stores all the stuff that happens
  # in the network
  tcpdump:
    image: kaazing/tcpdump
    network_mode: "host"
    volumes:
        - ../tcpdump:/tcpdump
    # Run tcdump in autorotating mode, with gzip compression
    # The files will be rotated every 24h or 500MB and named
    # after the timestamp when the file is created.
    command: [
      "-z", "gzip", # compress to gzip
      "-G", "86400", # 24h in seconds
      "-C", "500", # maximum file size
      "-W", "10", # ignored, only affects the name
      "-v", # verbose
      "-i", "any", # any interface
      "-w", "tcpdump/trace_%Y_%m_%d_%H_%M_%S.pcap" # trace_<timestamp>.pcap
    ]

  # RIoTPot is the container for the central node
  riotpot:
    build:
      context: ..
      dockerfile: ./build/docker/Dockerfile
    image: riotpot:development
    #command: 
    restart: always
    ports:
      # Ports under 60 might see errors when unquoted
      # https://stackoverflow.com/questions/58810789/quotes-on-docker-compose-yml-ports-make-any-difference
      - "7:7"
      - "22:22"
      - "23:23"
      - "502:502"
      - "1883:1883"
      - "5683:5683"
    env_file:
    - ../build/env/.env
    networks:
      honeypot:
        # give a static IP to the honeypot so we can find it
        # and attack it seamlessly
        ipv4_address: 10.5.0.6

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      honeypot:

  attacker:
    build:
      context: ..
      dockerfile: ./build/docker/Dockerfile.attacker
    stdin_open: true  # docker -i
    tty: true         # docker -t
    volumes:
      - ../test/pkg/services/mqtt:/riotpot/
    networks:
      honeypot:
      
volumes:
  postgres_data:

networks:
  honeypot:
    name: honeypot
    ipam:
      config:
        - subnet: 10.5.0.0/16